#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::vector<std::string> S) {
    std::sort(S.begin(), S.end());

    for (auto const& s: S) {
        std::cout << s;
    }
    std::cout << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long N;
    N = input();
    long long L;
    L = input();
    std::vector<std::string> S(N);
    for(int i = 0 ; i < N ; i++){
        S[i] = static_cast<std::string>(input());
    }
    solve(std::move(S));
    return 0;
}
