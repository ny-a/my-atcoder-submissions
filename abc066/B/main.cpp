#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::string S) {
    long long answer = 0;

    for (int i = S.size() - 1; 1 <= i; i--) {
        if (i % 2 == 1) {
            continue;
        }
        int half_i = i / 2;
        if (S.substr(0, half_i) == S.substr(half_i, half_i)) {
            answer = i;
            break;
        }
    }

    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    std::string S = input();
    solve(S);
    return 0;
}
