#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::string pin) {
    bool is_strong = true;
    if (pin[0] == pin[1] && pin[0] == pin[2] && pin[0] == pin[3]) {
        is_strong = false;
    } else {
        if (
            (((pin[0] - '0') + 1) % 10) == (pin[1] - '0') &&
            (((pin[1] - '0') + 1) % 10) == (pin[2] - '0') &&
            (((pin[2] - '0') + 1) % 10) == (pin[3] - '0')
        ) {
            is_strong = false;
        }
    }
    std::cout << (is_strong ? "Strong" : "Weak") << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    // Failed to predict input format
    std::string pin = input();
    solve(pin);
    return 0;
}
