#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long S, long long T) {
    long long answer = 0;

    for (int i = 0; i <= S; i++) {
        for (int j = 0; j <= S; j++) {
            for (int k = 0; k <= S; k++) {
                if (
                    (i + j + k <= S) &&
                    (i * j * k <= T)
                ) {
                    answer += 1;
                }
            }
        }
    }

    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long S;
    S = input();
    long long T;
    T = input();
    solve(S, T);
    return 0;
}
