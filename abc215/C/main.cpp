#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::string S, long long K) {
    std::vector<char> chars(S.begin(), S.end());

    std::sort(chars.begin(), chars.end(), std::greater<char>());

    for (int i = 0; i < K; i++) {
        std::next_permutation(chars.begin(), chars.end());
    }

    std::string answer(chars.begin(), chars.end());
    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    std::string S = input();
    long long K;
    K = input();
    solve(S, K);
    return 0;
}
