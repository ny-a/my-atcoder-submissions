#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long N, long long Y) {
    long long otoshidamaValue = Y / 1000;
    for (long long yukichi = 0; yukichi <= N; yukichi++) {
        long long leftN = N - yukichi;
        for (long long higuchi = 0; higuchi <= leftN; higuchi++) {
            long long hideyo = leftN - higuchi;
            if (yukichi * 10 + higuchi * 5 + hideyo == otoshidamaValue) {
                std::cout << yukichi << " " << higuchi << " " << hideyo << std::endl;
                return;
            }
        }
    }

    std::cout << "-1 -1 -1" << std::endl;
}

// Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
    long long N = input();
    long long Y = input();
    solve(N, Y);
    return 0;
}
