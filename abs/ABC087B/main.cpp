#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long A, long long B, long long C, long long X) {
    long long answer = 0;

    for (long long paidBy500 = A; paidBy500 >= 0; paidBy500--) {
        long long priceAfter500 = X - (paidBy500 * 500);

        for (long long paidBy100 = B; paidBy100 >= 0; paidBy100--) {
            long long priceAfter100 = priceAfter500 - (paidBy100 * 100);

            if ((0 <= priceAfter100) && (priceAfter100 <= (C * 50))) {
                answer += 1;
            }
        }
    }

    std::cout << answer << "\n";
}

// Generated by 2.3.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
    long long A = input();
    long long B = input();
    long long C = input();
    long long X = input();
    solve(A, B, C, X);
    return 0;
}
