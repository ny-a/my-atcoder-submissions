#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

const std::string YES = "Yes";

const std::string NO = "No";

void solve(long long A, long long B, std::string S) {
    bool answer = true;

    for (int i = 0; i < A; i++) {
        if ('0' <= S[i] && S[i] <= '9') {
            // ok
        } else {
            answer = false;
        }
    }
    if (S[A] == '-') {
        // ok
    } else {
        answer = false;
    }
    for (int i = 0; i < B; i++) {
        if ('0' <= S[A + 1 + i] && S[A + 1 + i] <= '9') {
            // ok
        } else {
            answer = false;
        }
    }

    std::cout << (answer ? YES : NO) << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long A;
    A = input();
    long long B;
    B = input();
    std::string S = input();
    solve(A, B, S);
    return 0;
}
