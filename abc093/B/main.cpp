#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long A, long long B, long long K) {
    long long mid = std::min(A + K - 1, B - 1);
    for (long long i = A; i <= mid; i++) {
        std::cout << i << "\n";
    }

    for (long long i = std::max(B - K, mid) + 1; i <= B; i++) {
        std::cout << i << "\n";
    }
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long A;
    A = input();
    long long B;
    B = input();
    long long K;
    K = input();
    solve(A, B, K);
    return 0;
}
