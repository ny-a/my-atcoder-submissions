#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

long long permutation(long long K, long long yz) {
    if (yz <= K) {
        return yz + 1;
    } else {
        long long z = yz - K;
        return K - z + 1;
    }
}

void solve(long long K, long long S) {
    long long answer = 0;
    for (long long x = std::min(K, S); x >= std::max(0LL, S - 2*K); x--) {
        long long yz = S - x;
        answer += permutation(K, yz);
    }

    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long K;
    K = input();
    long long S;
    S = input();
    solve(K, S);
    return 0;
}
