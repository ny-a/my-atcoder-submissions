#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::string ABCD) {
    int a = ABCD[0] - '0';
    int b = ABCD[1] - '0';
    int c = ABCD[2] - '0';
    int d = ABCD[3] - '0';

    for (int op1 = 0; op1 < 2; op1++) {
        for (int op2 = 0; op2 < 2; op2++) {
            for (int op3 = 0; op3 < 2; op3++) {
                int value = a + (b * (op1 == 0 ? 1 : -1)) + (c * (op2 == 0 ? 1 : -1)) + (d * (op3 == 0 ? 1 : -1));
                if (value == 7) {
                    std::cout << a << (op1 == 0 ? "+" : "-") << b << (op2 == 0 ? "+" : "-") << c << (op3 == 0 ? "+" : "-") << d << "=7" << std::endl;
                    return;
                }
            }
        }
    }
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    std::string ABCD = input();
    solve(ABCD);
    return 0;
}
