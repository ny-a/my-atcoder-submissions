#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long a, long long b, long long c) {
    long long paints[3] = {a, b, c};

    std::sort(paints, paints + 3);
    std::unique(paints, paints + 3);

    int answer = 3;

    if (paints[2] == paints[1]) {
        if (paints[1] == paints[0]) {
            answer = 1;
        } else {
            answer = 2;
        }
    }

    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long a;
    a = input();
    long long b;
    b = input();
    long long c;
    c = input();
    solve(a, b, c);
    return 0;
}
