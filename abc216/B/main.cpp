#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

const std::string YES = "Yes";

const std::string NO = "No";

void solve(int N, std::vector<std::string> names) {
    bool answer = false;
    std::sort(names.begin(), names.end());
    for (int i = 1; i < N; i++) {
        if (names[i - 1] == names[i]) {
            answer = true;
            break;
        }
    }
    std::cout << (answer ? YES : NO) << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    int N = input();
    std::vector<std::string> names(N);
    for (auto&& name: names) {
        std::string s = input();
        std::string t = input();
        name = s + " " + t;
    }
    solve(N, std::move(names));
    return 0;
}
