#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long K, long long A, long long B) {
    long long a_10 = 0;
    long long b_10 = 0;

    long long digit_value = 1;

    while (A != 0) {
        a_10 += (A % 10) * digit_value;
        A /= 10;
        digit_value *= K;
    }

    digit_value = 1;

    while (B != 0) {
        b_10 += (B % 10) * digit_value;
        B /= 10;
        digit_value *= K;
    }

    long long answer = a_10 * b_10;
    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long K;
    K = input();
    long long A;
    A = input();
    long long B;
    B = input();
    solve(K, A, B);
    return 0;
}
