#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long N, std::vector<std::string> S) {
    bool isFour = false;

    for (int i = 0; i < N; i++) {
        if (S[i] == "Y") {
            isFour = true;
        }
    }

    std::cout << (isFour ? "Four" : "Three") << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long N;
    N = input();
    std::vector<std::string> S(N);
    for(int i = 0 ; i < N ; i++){
        S[i] = static_cast<std::string>(input());
    }
    solve(N, std::move(S));
    return 0;
}
