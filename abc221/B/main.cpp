#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

const std::string YES = "Yes";

const std::string NO = "No";

void solve(std::string S, std::string T) {
    long long diff0 = -1;
    long long diff1 = -1;
    char diff0s = ' ';
    char diff0t = ' ';
    bool answer = true;

    for (int i = 0; i < S.size(); i++) {
        if (S[i] != T[i]) {
            if (diff0 == -1) {
                answer = false;
                diff0 = i;
                diff0s = S[i];
                diff0t = T[i];
            } else {
                if (diff1 == -1 && diff0 == i - 1 && diff0s == T[i] && diff0t == S[i]) {
                    diff1 = i;
                    answer = true;
                } else {
                    answer = false;
                }
            }
        }
    }

    std::cout << (answer ? YES : NO) << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    std::string S = input();
    std::string T = input();
    solve(S, T);
    return 0;
}
