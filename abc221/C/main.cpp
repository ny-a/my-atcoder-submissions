#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(std::string N) {
    std::sort(N.rbegin(), N.rend());
    int n = N.size();

    long long answer = 0;

    for (int bit = 0; bit < (1<<n); ++bit) {
        long long a = 0;
        long long b = 0;
        for (int i = 0; i < n; ++i) {
            if (bit & (1<<i)) {
                a *= 10;
                a += N[i] - '0';
            } else {
                b *= 10;
                b += N[i] - '0';
            }
        }
        long long value = a * b;
        if (answer < value) {
            answer = value;
        }
    }

    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    std::string N = input();
    solve(N);
    return 0;
}
