#include <algorithm>
#include <atcoder/all>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

struct input {
    template <class T> operator T() {
        T t;
        std::cin >> t;
        return t;
    }
};

void solve(long long N, long long K, std::vector<long long> l) {
    std::sort(l.begin(), l.end(), std::greater<long long>());

    long long answer = std::accumulate(l.begin(), l.begin() + K, 0);
    std::cout << answer << std::endl;
}

// Generated by 2.5.0 https://github.com/kyuridenamida/atcoder-tools
int main() {
    long long N;
    N = input();
    long long K;
    K = input();
    std::vector<long long> l(N);
    for(int i = 0 ; i < N ; i++){
        l[i] = input();
    }
    solve(N, K, std::move(l));
    return 0;
}
